FROM registry.redhat.io/ubi8/go-toolset:1.21@sha256:4ec05fd5b355106cc0d990021a05b71bbfb9231e4f5bdc0c5316515edf6a1c96 AS golang

FROM registry.redhat.io/ubi8/ubi@sha256:c0b07294568b8c1281d3ad89616ce036095da770a4410147c1755d930b562682 AS builder

ARG GOLANG_VERSION=1.21.6

# Install system dependencies
RUN dnf install -y \
    gcc \
    make \
    openssl-devel \
    && dnf clean all && rm -rf /var/cache/yum

# Install Go
ENV PATH=/usr/local/go/bin:$PATH

COPY --from=golang /usr/lib/golang /usr/local/go

WORKDIR /workspace

COPY go.mod go.mod
COPY go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source
COPY . .

USER root
RUN make build GO_BUILD_ENV='CGO_ENABLED=1 GOOS=linux GOARCH=amd64'


FROM registry.redhat.io/ubi8/ubi-minimal@sha256:9746f7ac575b4427fc9635f8f575289870a8b30dabf77ee992ae4c2f1e121cce AS runtime

## Build args to be used at this step
ARG USER=65532

LABEL com.redhat.component="odh-kueue-controller-container" \
      name="managed-open-data-hub/odh-kueue-controller-rhel8" \
      description="Kueue is a set of APIs and controller for job queueing. It is a job-level manager that decides when a job should be admitted to start (as in pods can be created) and when it should stop (as in active pods should be deleted)." \
      summary="odh-kueue-controller" \
      maintainer="['managed-open-data-hub@redhat.com']" \
      io.openshift.expose-services="" \
      io.k8s.display-name="odh-kueue-controller" \
      io.k8s.description="odh-kueue-controller" \
      com.redhat.license_terms="https://www.redhat.com/licenses/Red_Hat_Standard_EULA_20191108.pdf"

WORKDIR /
COPY --from=builder /workspace/bin/manager .

## Create a non-root user with UID 65532 and switch to it
USER ${USER}:${USER}

ENTRYPOINT ["/manager"]
